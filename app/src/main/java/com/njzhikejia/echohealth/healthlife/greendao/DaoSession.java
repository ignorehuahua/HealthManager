package com.njzhikejia.echohealth.healthlife.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.njzhikejia.echohealth.healthlife.entity.Message;
import com.njzhikejia.echohealth.healthlife.entity.concern.Concerneds;
import com.njzhikejia.echohealth.healthlife.entity.concern.Concerns;
import com.njzhikejia.echohealth.healthlife.entity.measure.SpecificData;
import com.njzhikejia.echohealth.healthlife.entity.warn.SrcData;
import com.njzhikejia.echohealth.healthlife.entity.warn.RegionAdamin;
import com.njzhikejia.echohealth.healthlife.entity.warn.Notices;
import com.njzhikejia.echohealth.healthlife.entity.warn.Measure;
import com.njzhikejia.echohealth.healthlife.entity.report.Reports;
import com.njzhikejia.echohealth.healthlife.entity.user.Extend;
import com.njzhikejia.echohealth.healthlife.entity.user.User;
import com.njzhikejia.echohealth.healthlife.entity.rule.RuleResult;
import com.njzhikejia.echohealth.healthlife.entity.rule.Vein_whole_blood;
import com.njzhikejia.echohealth.healthlife.entity.rule.Diastolic;
import com.njzhikejia.echohealth.healthlife.entity.rule.Blood_sugar;
import com.njzhikejia.echohealth.healthlife.entity.rule.Body_temperature;
import com.njzhikejia.echohealth.healthlife.entity.rule.Pulse;
import com.njzhikejia.echohealth.healthlife.entity.rule.Systolic;
import com.njzhikejia.echohealth.healthlife.entity.rule.Bp;
import com.njzhikejia.echohealth.healthlife.entity.rule.Spo2;

import com.njzhikejia.echohealth.healthlife.greendao.MessageDao;
import com.njzhikejia.echohealth.healthlife.greendao.ConcernedsDao;
import com.njzhikejia.echohealth.healthlife.greendao.ConcernsDao;
import com.njzhikejia.echohealth.healthlife.greendao.SpecificDataDao;
import com.njzhikejia.echohealth.healthlife.greendao.SrcDataDao;
import com.njzhikejia.echohealth.healthlife.greendao.RegionAdaminDao;
import com.njzhikejia.echohealth.healthlife.greendao.NoticesDao;
import com.njzhikejia.echohealth.healthlife.greendao.MeasureDao;
import com.njzhikejia.echohealth.healthlife.greendao.ReportsDao;
import com.njzhikejia.echohealth.healthlife.greendao.ExtendDao;
import com.njzhikejia.echohealth.healthlife.greendao.UserDao;
import com.njzhikejia.echohealth.healthlife.greendao.RuleResultDao;
import com.njzhikejia.echohealth.healthlife.greendao.Vein_whole_bloodDao;
import com.njzhikejia.echohealth.healthlife.greendao.DiastolicDao;
import com.njzhikejia.echohealth.healthlife.greendao.Blood_sugarDao;
import com.njzhikejia.echohealth.healthlife.greendao.Body_temperatureDao;
import com.njzhikejia.echohealth.healthlife.greendao.PulseDao;
import com.njzhikejia.echohealth.healthlife.greendao.SystolicDao;
import com.njzhikejia.echohealth.healthlife.greendao.BpDao;
import com.njzhikejia.echohealth.healthlife.greendao.Spo2Dao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig messageDaoConfig;
    private final DaoConfig concernedsDaoConfig;
    private final DaoConfig concernsDaoConfig;
    private final DaoConfig specificDataDaoConfig;
    private final DaoConfig srcDataDaoConfig;
    private final DaoConfig regionAdaminDaoConfig;
    private final DaoConfig noticesDaoConfig;
    private final DaoConfig measureDaoConfig;
    private final DaoConfig reportsDaoConfig;
    private final DaoConfig extendDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig ruleResultDaoConfig;
    private final DaoConfig vein_whole_bloodDaoConfig;
    private final DaoConfig diastolicDaoConfig;
    private final DaoConfig blood_sugarDaoConfig;
    private final DaoConfig body_temperatureDaoConfig;
    private final DaoConfig pulseDaoConfig;
    private final DaoConfig systolicDaoConfig;
    private final DaoConfig bpDaoConfig;
    private final DaoConfig spo2DaoConfig;

    private final MessageDao messageDao;
    private final ConcernedsDao concernedsDao;
    private final ConcernsDao concernsDao;
    private final SpecificDataDao specificDataDao;
    private final SrcDataDao srcDataDao;
    private final RegionAdaminDao regionAdaminDao;
    private final NoticesDao noticesDao;
    private final MeasureDao measureDao;
    private final ReportsDao reportsDao;
    private final ExtendDao extendDao;
    private final UserDao userDao;
    private final RuleResultDao ruleResultDao;
    private final Vein_whole_bloodDao vein_whole_bloodDao;
    private final DiastolicDao diastolicDao;
    private final Blood_sugarDao blood_sugarDao;
    private final Body_temperatureDao body_temperatureDao;
    private final PulseDao pulseDao;
    private final SystolicDao systolicDao;
    private final BpDao bpDao;
    private final Spo2Dao spo2Dao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        concernedsDaoConfig = daoConfigMap.get(ConcernedsDao.class).clone();
        concernedsDaoConfig.initIdentityScope(type);

        concernsDaoConfig = daoConfigMap.get(ConcernsDao.class).clone();
        concernsDaoConfig.initIdentityScope(type);

        specificDataDaoConfig = daoConfigMap.get(SpecificDataDao.class).clone();
        specificDataDaoConfig.initIdentityScope(type);

        srcDataDaoConfig = daoConfigMap.get(SrcDataDao.class).clone();
        srcDataDaoConfig.initIdentityScope(type);

        regionAdaminDaoConfig = daoConfigMap.get(RegionAdaminDao.class).clone();
        regionAdaminDaoConfig.initIdentityScope(type);

        noticesDaoConfig = daoConfigMap.get(NoticesDao.class).clone();
        noticesDaoConfig.initIdentityScope(type);

        measureDaoConfig = daoConfigMap.get(MeasureDao.class).clone();
        measureDaoConfig.initIdentityScope(type);

        reportsDaoConfig = daoConfigMap.get(ReportsDao.class).clone();
        reportsDaoConfig.initIdentityScope(type);

        extendDaoConfig = daoConfigMap.get(ExtendDao.class).clone();
        extendDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        ruleResultDaoConfig = daoConfigMap.get(RuleResultDao.class).clone();
        ruleResultDaoConfig.initIdentityScope(type);

        vein_whole_bloodDaoConfig = daoConfigMap.get(Vein_whole_bloodDao.class).clone();
        vein_whole_bloodDaoConfig.initIdentityScope(type);

        diastolicDaoConfig = daoConfigMap.get(DiastolicDao.class).clone();
        diastolicDaoConfig.initIdentityScope(type);

        blood_sugarDaoConfig = daoConfigMap.get(Blood_sugarDao.class).clone();
        blood_sugarDaoConfig.initIdentityScope(type);

        body_temperatureDaoConfig = daoConfigMap.get(Body_temperatureDao.class).clone();
        body_temperatureDaoConfig.initIdentityScope(type);

        pulseDaoConfig = daoConfigMap.get(PulseDao.class).clone();
        pulseDaoConfig.initIdentityScope(type);

        systolicDaoConfig = daoConfigMap.get(SystolicDao.class).clone();
        systolicDaoConfig.initIdentityScope(type);

        bpDaoConfig = daoConfigMap.get(BpDao.class).clone();
        bpDaoConfig.initIdentityScope(type);

        spo2DaoConfig = daoConfigMap.get(Spo2Dao.class).clone();
        spo2DaoConfig.initIdentityScope(type);

        messageDao = new MessageDao(messageDaoConfig, this);
        concernedsDao = new ConcernedsDao(concernedsDaoConfig, this);
        concernsDao = new ConcernsDao(concernsDaoConfig, this);
        specificDataDao = new SpecificDataDao(specificDataDaoConfig, this);
        srcDataDao = new SrcDataDao(srcDataDaoConfig, this);
        regionAdaminDao = new RegionAdaminDao(regionAdaminDaoConfig, this);
        noticesDao = new NoticesDao(noticesDaoConfig, this);
        measureDao = new MeasureDao(measureDaoConfig, this);
        reportsDao = new ReportsDao(reportsDaoConfig, this);
        extendDao = new ExtendDao(extendDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        ruleResultDao = new RuleResultDao(ruleResultDaoConfig, this);
        vein_whole_bloodDao = new Vein_whole_bloodDao(vein_whole_bloodDaoConfig, this);
        diastolicDao = new DiastolicDao(diastolicDaoConfig, this);
        blood_sugarDao = new Blood_sugarDao(blood_sugarDaoConfig, this);
        body_temperatureDao = new Body_temperatureDao(body_temperatureDaoConfig, this);
        pulseDao = new PulseDao(pulseDaoConfig, this);
        systolicDao = new SystolicDao(systolicDaoConfig, this);
        bpDao = new BpDao(bpDaoConfig, this);
        spo2Dao = new Spo2Dao(spo2DaoConfig, this);

        registerDao(Message.class, messageDao);
        registerDao(Concerneds.class, concernedsDao);
        registerDao(Concerns.class, concernsDao);
        registerDao(SpecificData.class, specificDataDao);
        registerDao(SrcData.class, srcDataDao);
        registerDao(RegionAdamin.class, regionAdaminDao);
        registerDao(Notices.class, noticesDao);
        registerDao(Measure.class, measureDao);
        registerDao(Reports.class, reportsDao);
        registerDao(Extend.class, extendDao);
        registerDao(User.class, userDao);
        registerDao(RuleResult.class, ruleResultDao);
        registerDao(Vein_whole_blood.class, vein_whole_bloodDao);
        registerDao(Diastolic.class, diastolicDao);
        registerDao(Blood_sugar.class, blood_sugarDao);
        registerDao(Body_temperature.class, body_temperatureDao);
        registerDao(Pulse.class, pulseDao);
        registerDao(Systolic.class, systolicDao);
        registerDao(Bp.class, bpDao);
        registerDao(Spo2.class, spo2Dao);
    }
    
    public void clear() {
        messageDaoConfig.clearIdentityScope();
        concernedsDaoConfig.clearIdentityScope();
        concernsDaoConfig.clearIdentityScope();
        specificDataDaoConfig.clearIdentityScope();
        srcDataDaoConfig.clearIdentityScope();
        regionAdaminDaoConfig.clearIdentityScope();
        noticesDaoConfig.clearIdentityScope();
        measureDaoConfig.clearIdentityScope();
        reportsDaoConfig.clearIdentityScope();
        extendDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        ruleResultDaoConfig.clearIdentityScope();
        vein_whole_bloodDaoConfig.clearIdentityScope();
        diastolicDaoConfig.clearIdentityScope();
        blood_sugarDaoConfig.clearIdentityScope();
        body_temperatureDaoConfig.clearIdentityScope();
        pulseDaoConfig.clearIdentityScope();
        systolicDaoConfig.clearIdentityScope();
        bpDaoConfig.clearIdentityScope();
        spo2DaoConfig.clearIdentityScope();
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public ConcernedsDao getConcernedsDao() {
        return concernedsDao;
    }

    public ConcernsDao getConcernsDao() {
        return concernsDao;
    }

    public SpecificDataDao getSpecificDataDao() {
        return specificDataDao;
    }

    public SrcDataDao getSrcDataDao() {
        return srcDataDao;
    }

    public RegionAdaminDao getRegionAdaminDao() {
        return regionAdaminDao;
    }

    public NoticesDao getNoticesDao() {
        return noticesDao;
    }

    public MeasureDao getMeasureDao() {
        return measureDao;
    }

    public ReportsDao getReportsDao() {
        return reportsDao;
    }

    public ExtendDao getExtendDao() {
        return extendDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public RuleResultDao getRuleResultDao() {
        return ruleResultDao;
    }

    public Vein_whole_bloodDao getVein_whole_bloodDao() {
        return vein_whole_bloodDao;
    }

    public DiastolicDao getDiastolicDao() {
        return diastolicDao;
    }

    public Blood_sugarDao getBlood_sugarDao() {
        return blood_sugarDao;
    }

    public Body_temperatureDao getBody_temperatureDao() {
        return body_temperatureDao;
    }

    public PulseDao getPulseDao() {
        return pulseDao;
    }

    public SystolicDao getSystolicDao() {
        return systolicDao;
    }

    public BpDao getBpDao() {
        return bpDao;
    }

    public Spo2Dao getSpo2Dao() {
        return spo2Dao;
    }

}
